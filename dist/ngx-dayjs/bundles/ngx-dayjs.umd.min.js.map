{
  "version": 3,
  "file": "ngx-dayjs.umd.min.js",
  "sources": [
    "ng://ngx-dayjs/out/add.pipe.ts",
    "ng://ngx-dayjs/out/date-format.pipe.ts",
    "ng://ngx-dayjs/out/difference.pipe.ts",
    "ng://ngx-dayjs/out/from-unix.pipe.ts",
    "ng://ngx-dayjs/out/parse.pipe.ts",
    "ng://ngx-dayjs/out/subtract.pipe.ts",
    "ng://ngx-dayjs/out/dayjs.module.ts"
  ],
  "sourcesContent": [
    "import {Pipe, PipeTransform} from '@angular/core';\nimport * as dayjs_ from 'dayjs';\nconst dayjs = dayjs_;\n\n@Pipe({ name: 'amAdd' })\nexport class AddPipe implements PipeTransform {\n    transform(value: any, amount: any, unit?: any): any {\n        if (typeof amount === 'undefined' || (typeof amount === 'number' && typeof unit === 'undefined')) {\n            throw new Error('AddPipe: missing required arguments');\n        }\n        return dayjs(value).add(amount, unit);\n    }\n}\n",
    "import {Pipe, PipeTransform} from '@angular/core';\nimport * as dayjs_ from 'dayjs';\nconst dayjs = dayjs_;\n\n@Pipe({ name: 'amDateFormat' })\nexport class DateFormatPipe implements PipeTransform {\n  transform(value: any, ...args: any[]): string {\n    if (!value) { return ''; }\n    return dayjs(value).format(args[0]);\n  }\n}\n",
    "import {Pipe, PipeTransform} from '@angular/core';\nimport * as dayjs_ from 'dayjs';\nconst dayjs = dayjs_;\n\n@Pipe({ name: 'amDifference' })\nexport class DifferencePipe implements PipeTransform {\n  transform(value: any, otherValue: any,  unit?: any, precision?: boolean): number {\n\n    const date = dayjs(value);\n    const date2 = (otherValue !== null) ? dayjs(otherValue) : dayjs();\n\n    return date.diff(date2, unit, precision);\n  }\n}\n",
    "import {Pipe, PipeTransform} from '@angular/core';\nimport * as dayjs_ from 'dayjs';\nconst dayjs = dayjs_;\n\n@Pipe({ name: 'amFromUnix' })\nexport class FromUnixPipe implements PipeTransform {\n  transform(value: any, ...args: string[]): any {\n    if (typeof value === 'string') {\n      value = +value;\n    }\n    return dayjs.unix(value);\n  }\n}\n",
    "import { Pipe, PipeTransform } from '@angular/core';\nimport * as dayjs_ from 'dayjs';\nconst dayjs = dayjs_;\n\n@Pipe({ name: 'amParse' })\nexport class ParsePipe implements PipeTransform {\n  transform(value: string, format: string): any {\n    return dayjs(value).format(format);\n  }\n}\n",
    "import {Pipe, PipeTransform} from '@angular/core';\nimport * as dayjs_ from 'dayjs';\nconst dayjs = dayjs_;\n\n@Pipe({ name: 'amSubtract' })\nexport class SubtractPipe implements PipeTransform {\n    transform(value: any, amount: any, unit?: any): any {\n        if (typeof amount === 'undefined' || (typeof amount === 'number' && typeof unit === 'undefined')) {\n            throw new Error('SubtractPipe: missing required arguments');\n        }\n        return dayjs(value).subtract(amount, unit);\n    }\n}\n",
    "import { NgModule } from '@angular/core';\n\nimport { AddPipe } from './add.pipe';\nimport { DateFormatPipe } from './date-format.pipe';\nimport { DifferencePipe } from './difference.pipe';\nimport { FromUnixPipe } from './from-unix.pipe';\nimport { ParsePipe } from './parse.pipe';\nimport { SubtractPipe } from './subtract.pipe';\n\nconst ANGULAR_DAYJS_PIPES = [\n  AddPipe,\n  DateFormatPipe,\n  DifferencePipe,\n  FromUnixPipe,\n  ParsePipe,\n  SubtractPipe,\n];\n\n@NgModule({\n  declarations: ANGULAR_DAYJS_PIPES,\n  exports: ANGULAR_DAYJS_PIPES\n})\nexport class DayjsModule { }\n"
  ],
  "names": [
    "dayjs",
    "dayjs_",
    "AddPipe",
    "prototype",
    "transform",
    "value",
    "amount",
    "unit",
    "Error",
    "add",
    "type",
    "Pipe",
    "args",
    "name",
    "DateFormatPipe",
    "_i",
    "arguments",
    "length",
    "format",
    "DifferencePipe",
    "otherValue",
    "precision",
    "date",
    "date2",
    "diff",
    "FromUnixPipe",
    "unix",
    "ParsePipe",
    "SubtractPipe",
    "subtract",
    "ANGULAR_DAYJS_PIPES",
    "DayjsModule",
    "NgModule",
    "declarations",
    "exports"
  ],
  "mappings": "mSAAA,IAEMA,EAAQC,EAGdC,EAAA,WAAA,SAAAA,YACIA,EAAJC,UAAAC,UAAI,SAAUC,EAAYC,EAAaC,GAC/B,QAAsB,IAAXD,GAA6C,iBAAXA,QAAuC,IAATC,EACvE,MAAM,IAAIC,MAAM,uCAEpB,OAAOR,EAAMK,GAAOI,IAAIH,EAAQC,MALxC,iBADA,CAAAG,KAACC,EAAAA,KAADC,KAAA,CAAM,CAAEC,KAAM,YCJd,IAEMb,EAAQC,EAGda,EAAA,WAAA,SAAAA,YACEA,EAAFX,UAAAC,UAAE,SAAUC,GAAZ,IAAwB,IAAxBO,EAAA,GAAAG,EAAA,EAAwBA,EAAxBC,UAAAC,OAAwBF,IAAAH,EAAxBG,EAAA,GAAAC,UAAAD,GACI,OAAKV,EACEL,EAAMK,GAAOa,OAAON,EAAK,IADX,MAFzB,iBADA,CAAAF,KAACC,EAAAA,KAADC,KAAA,CAAM,CAAEC,KAAM,mBCJd,IAEMb,EAAQC,EAGdkB,EAAA,WAAA,SAAAA,YACEA,EAAFhB,UAAAC,UAAE,SAAUC,EAAYe,EAAkBb,EAAYc,GAElD,IAAMC,EAAOtB,EAAMK,GACbkB,EAAwB,OAAfH,EAAuBpB,EAAMoB,GAAcpB,IAE1D,OAAOsB,EAAKE,KAAKD,EAAOhB,EAAMc,MANlC,iBADA,CAAAX,KAACC,EAAAA,KAADC,KAAA,CAAM,CAAEC,KAAM,mBCJd,IAEMb,EAAQC,EAGdwB,EAAA,WAAA,SAAAA,YACEA,EAAFtB,UAAAC,UAAE,SAAUC,GAAZ,IAAwB,IAAxBO,EAAA,GAAAG,EAAA,EAAwBA,EAAxBC,UAAAC,OAAwBF,IAAAH,EAAxBG,EAAA,GAAAC,UAAAD,GAII,MAHqB,iBAAVV,IACTA,GAASA,GAEJL,EAAM0B,KAAKrB,MALtB,iBADA,CAAAK,KAACC,EAAAA,KAADC,KAAA,CAAM,CAAEC,KAAM,iBCJd,IAEMb,EAAQC,EAGd0B,EAAA,WAAA,SAAAA,YACEA,EAAFxB,UAAAC,UAAE,SAAUC,EAAea,GACvB,OAAOlB,EAAMK,GAAOa,OAAOA,MAF/B,iBADA,CAAAR,KAACC,EAAAA,KAADC,KAAA,CAAM,CAAEC,KAAM,cCJd,IAEMb,EAAQC,EAGd2B,EAAA,WAAA,SAAAA,YACIA,EAAJzB,UAAAC,UAAI,SAAUC,EAAYC,EAAaC,GAC/B,QAAsB,IAAXD,GAA6C,iBAAXA,QAAuC,IAATC,EACvE,MAAM,IAAIC,MAAM,4CAEpB,OAAOR,EAAMK,GAAOwB,SAASvB,EAAQC,MAL7C,iBADA,CAAAG,KAACC,EAAAA,KAADC,KAAA,CAAM,CAAEC,KAAM,iBCJd,IASMiB,EAAsB,CAC1B5B,EACAY,EACAK,EACAM,EACAE,EACAC,GAOFG,EAAA,2BAJA,CAAArB,KAACsB,EAAAA,SAADpB,KAAA,CAAU,CACRqB,aAAcH,EACdI,QAASJ"
}
